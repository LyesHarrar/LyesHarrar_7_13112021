{"remainingRequest":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\src\\components\\Comment.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\src\\components\\Comment.vue","mtime":1609954819000},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1636700267689},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1636700306457},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\postcss-loader\\src\\index.js","mtime":1636700280736},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636700259092},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1636700288853}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICcuLi9zdHlsZS9zdHlsZS5jc3MnOwo="},{"version":3,"sources":["Comment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA","file":"Comment.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"comment\" :commentID=\"commentID\" :postID=\"postID\">\n        <p class=\"comment-info\">Le {{ convertDate }}, {{ userInfo.firstName }} {{ userInfo.lastName }} a répondu :\n            <img\n                v-if=\"commentInfo.userID == visitorID || adminRights == 1\"\n                @click=\"deleteComment\"\n                src=\"../assets/trash.png\"\n                alt=\"Icône de suppression\"\n            />\n        </p>\n        <p class=\"comment-content\">\" {{ commentInfo.commentText }} \"</p>\n    </div>\n</template>        \n\n<script>\nexport default {\n    name: \"Comment\",\n    props: {\n        commentID: {\n            type: Number\n        },\n        postID: {\n            type: Number\n        }\n    },\n    data: () => {\n        return {\n            commentInfo: {\n                userID: \"\",\n                commentText: \"\",\n                dateSend: \"\"\n            },\n            userInfo: {\n                firstName: \"\",\n                lastName: \"\"\n            },\n            visitorID: localStorage.getItem(\"userID\"),\n            adminRights: localStorage.getItem(\"adminRights\")\n        }\n    },\n    computed: {\n        convertDate() {\n            let date = this.commentInfo.dateSend.split(/[- T :]/);\n            let convertDate = `${date[2]}/${date[1]}/${date[0]}`;\n            return convertDate;\n        }\n    },\n    methods: {\n        getCommentInfo() {\n            let url = `http://localhost:3000/api/comment/${ this.postID }/${ this.commentID}`;\n            let options = {\n                method: \"GET\",\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"token\"),\n                }\n            };\n            fetch(url, options)\n                .then(response => response.json())\n                .then((data) => {\n                    if (data[0]) {\n                        this.commentInfo.userID = data[0].userID;\n                        this.commentInfo.commentText = data[0].commentText;\n                        this.commentInfo.dateSend = data[0].dateSend;\n                        this.getUserInfo();\n                    }\n                    else {\n                        this.updateMessage = data.message;\n                    }\n                })\n                .catch(error => console.log(error))\n        },\n        getUserInfo() {\n            let url = `http://localhost:3000/api/user/${ this.commentInfo.userID }`;\n            let options = {\n                method: \"GET\",\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"token\"),\n                }\n            };\n            fetch(url, options)\n                .then(response => response.json())\n                .then(data => {\n                    this.userInfo.firstName = data[0].firstName;\n                    this.userInfo.lastName = data[0].lastName;\n                })\n                .catch(error => console.log(error))\n        },\n        deleteComment() {\n            let url = `http://localhost:3000/api/comment/${ this.postID }/${ this.commentID}`;\n            let options = {\n                method: \"DELETE\",\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"token\"),\n                }\n            };\n            fetch(url, options)\n                .then(response => response.json())\n                .then(() => {\n                    this.$emit(\"comment-deleted\");\n                })\n                .catch(error => console.log(error))\n        },\n    },\n    mounted() {\n        this.getCommentInfo();\n    }\n}\n</script>\n\n<style lang=\"css\">\n@import '../style/style.css';\n</style>"]}]}