{"remainingRequest":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\src\\components\\Post.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\src\\components\\Post.vue","mtime":1609954819000},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1636700267689},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1636700306457},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\postcss-loader\\src\\index.js","mtime":1636700280736},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636700259092},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1636700288853}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICcuLi9zdHlsZS9zdHlsZS5jc3MnCg=="},{"version":3,"sources":["Post.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4OA","file":"Post.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <div class=\"post\" :postID=\"postID\">\n            <div class=\"post-info\">\n                <div class=\"post-info-sender\">\n                    <img\n                        class=\"post-info-sender-avatar\"\n                        :src=\"userInfo.avatarUrl\"\n                        alt=\"Avatar de l'utilisateur\"\n                    />\n                    <h3\n                        class=\"post-info-sender-name\">\n                        {{ userInfo.firstName }}\n                        {{ userInfo.lastName }}\n                    </h3>\n                </div>\n                <div class=\"post-info-time\">\n                    <h3>Posté le {{ convertDate }}</h3>\n                    <img\n                        v-if=\"postInfo.userID == visitorID || adminRights == 1\"\n                        @click=\"deletePost\"\n                        src=\"../assets/white-trash.png\"\n                        alt=\"Icône de suppression\"\n                    />\n                </div>\n            </div>\n\n            <div class=\"post-content\">\n                <p\n                    v-if=\"updateMessage.length >= 1\"\n                    class=\"alert-msg\">\n                    {{ updateMessage }}\n                </p>\n                <img\n                    class=\"post-content-gif\"\n                    :src=\"postInfo.gifUrl\"\n                    alt=\"Gif publié par l'utilisateur\"\n                />\n                <div class=\"post-content-text\">\n                    <div>\n                        <h2>{{ postInfo.title }}</h2>\n                        <p>{{ postInfo.text }}</p>\n                    </div>\n                    <div class=\"post-claps\">\n                        <img\n                            v-if=\"postInfo.claps >= 1\"\n                            @click=\"clapPost\"\n                            src=\"../assets/clap.png\"\n                            alt=\"Icône accompagnant le nombre d'applaudissements\"\n                        />\n                        <img\n                            v-else\n                            src=\"../assets/unclap.png\"\n                            @click=\"clapPost\"\n                            alt=\"Icône signifiant l'absence d'applaudissement\"\n                        />\n                        <p v-if=\"postInfo.claps >= 1\">{{ postInfo.claps }}</p>\n                    </div>\n                </div>\n            </div>\n            <button\n                v-if=\"!invisibleComs\"\n                @click=\"invisibleComs = true\"\n                class=\"toggle-button\"\n                aria-hidden=\"true\"\n                >Masquer les commentaires\n            </button>\n            <button\n                v-if=\"invisibleComs\"\n                @click=\"invisibleComs = false\"\n                class=\"toggle-button\"\n                aria-hidden=\"true\"\n                >Afficher les commentaires\n            </button>\n        </div>\n\n        <div class=\"comment-section\" v-show=\"!invisibleComs\">\n            <Comment\n                v-for=\"comment in commentList\"\n                v-bind:key=\"comment.commentID\"\n                :commentID=\"comment.commentID\"\n                :postID=\"comment.postID\"\n                @comment-deleted=\"getCommentList\"\n            />\n            <NewComment\n                :postID=\"this.postID\"\n                @comment-published=\"getCommentList\"\n            />\n        </div>\n    </div>\n</template>\n\n<script>\nimport Comment from '../components/Comment'\nimport NewComment from '../components/NewComment'\nexport default {\n    name: \"Post\",\n    props: {\n        postID: {\n            type: Number\n        }\n    },\n    components: {\n        Comment,\n        NewComment\n    },\n    data: () => {\n        return {\n            postInfo: {\n                postID: \"\",\n                userID: \"\",\n                dateSend: \"\",\n                title: \"\",\n                gifUrl: \"\",\n                text: \"\",\n                claps: \"\",\n            },\n            userInfo : {\n                avatarUrl : \"\",\n                firstName: \"\",\n                lastName: \"\",\n            },\n            updateMessage: \"\",\n            visitorID: localStorage.getItem(\"userID\"),\n            commentList: [],\n            invisibleComs: true,\n            adminRights: localStorage.getItem(\"adminRights\")\n        }\n    },\n    computed: {\n        convertDate() {\n            let date = this.postInfo.dateSend.split(/[- T :]/);\n            let convertDate = `${date[2]}/${date[1]}/${date[0]}`;\n            return convertDate;\n        },\n    },\n    methods: {\n        getPostInfo() {\n            let url = `http://localhost:3000/api/post/${ this.postID }`;\n            let options = {\n                method: \"GET\",\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"token\"),\n                }\n            };\n            fetch(url, options)\n                .then(response => response.json())\n                .then((data) => {\n                    if (data[0]) {\n                        this.postInfo.postID = data[0].postID;\n                        this.postInfo.title = data[0].postTitle;\n                        this.postInfo.gifUrl = data[0].gifUrl;\n                        this.postInfo.text = data[0].postText;\n                        this.postInfo.claps = data[0].claps;\n                        this.postInfo.dateSend = data[0].dateSend;\n                        this.postInfo.userID = data[0].userID;\n                        this.getUserInfo();\n                    }\n                    else {\n                        this.updateMessage = data.message;\n                    }\n                })\n                .catch(error => console.log(error))\n        },\n        getUserInfo() {\n            let url = `http://localhost:3000/api/user/${ this.postInfo.userID }`;\n            let options = {\n                method: \"GET\",\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"token\"),\n                }\n            };\n            fetch(url, options)\n                .then(response => response.json())\n                .then(data => {\n                    this.userInfo.avatarUrl = data[0].avatarUrl;\n                    this.userInfo.firstName = data[0].firstName;\n                    this.userInfo.lastName = data[0].lastName;\n                    this.userInfo.adminRights = data[0].adminRights;\n                })\n                .catch(error => console.log(error))\n        },\n        getCommentList() {\n            let url = `http://localhost:3000/api/comment/${ this.postID }`;\n            let options = {\n                method: \"GET\",\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"token\"),\n                }\n            };\n            fetch(url, options)\n                .then(response => response.json())\n                .then((data) => {\n                    this.commentList = data;\n                })\n            .catch(error => console.log(error))\n        },\n        deletePost() {\n            let url = `http://localhost:3000/api/post/${ this.postID }`;\n            let options = {\n                method: \"DELETE\",\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"token\"),\n                }\n            };\n            fetch(url, options)\n                .then(response => response.json())\n                .then(() => {\n                    this.$emit(\"post-deleted\");\n                })\n                .catch(error => console.log(error))\n        },\n        clapPost() {\n            let url = `http://localhost:3000/api/post/${ this.postID }`;\n            let options = {\n                method: \"PUT\",\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"token\"),\n                }\n            };\n            fetch(url, options)\n                .then(response => response.json())\n                .then(() => {\n                    this.getPostInfo();\n                })\n                .catch(error => console.log(error))\n        }\n    },\n    mounted() {\n        this.getPostInfo();\n        this.getCommentList();\n    }\n}\n</script>\n\n<style lang=\"css\">\n@import '../style/style.css'\n</style>"]}]}