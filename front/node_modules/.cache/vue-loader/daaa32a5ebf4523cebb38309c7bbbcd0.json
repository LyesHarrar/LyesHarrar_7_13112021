{"remainingRequest":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\src\\views\\UserProfile.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\src\\views\\UserProfile.vue","mtime":1609954819000},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1636700267689},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1636700306457},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\postcss-loader\\src\\index.js","mtime":1636700280736},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636700259092},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1636700288853}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgJy4uL3N0eWxlL3N0eWxlLmNzcycK"},{"version":3,"sources":["UserProfile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8IA","file":"UserProfile.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"container\">\n        <HomeNav></HomeNav>\n        <h1>Modifier votre profil</h1>\n        <form>\n            <fieldset>\n                <img\n                    class=\"avatar\"\n                    :src=\"userProfile.avatarUrl\"\n                />\n                <label for=\"new-avatar-url\">Changer de photo de profil\n                    <input\n                        v-on:change=\"updateAvatar\"\n                        id=\"new-avatar-url\"\n                        type=\"file\"\n                        accept=\"image/*\"\n                    />\n                </label>\n            </fieldset>\n            <fieldset>\n                <label for=\"new-first-name\">Votre prénom n'est pas\n                    <span class=\"bold-text\">{{ userProfile.firstName }}</span> ?\n                    <input\n                        v-model=\"newProfile.firstName\"\n                        id=\"new-first-name\"\n                        placeholder=\"Votre vrai prénom\"\n                    />\n                </label>\n            </fieldset>\n            <fieldset>\n                <label for=\"new-last-name\">Votre nom n'est pas\n                    <span class=\"bold-text\">{{ userProfile.lastName }}</span> ?\n                    <input v-model=\"newProfile.lastName\"\n                        id=\"new-last-name\"\n                        placeholder=\"Votre vrai nom\"\n                    />\n                </label>\n            </fieldset>\n            <p v-if=\"updateMessage.length >= 1\" class=\"alert-msg\">{{ updateMessage }}</p>\n            <button @click=\"modifyProfile\" id=\"modify-user\">Modifier votre profil</button>\n            <button @click=\"deleteProfile\" id=\"delete-user\">Supprimer votre compte</button>\n        </form>\n    </div>\n</template>\n\n<script>\nimport HomeNav from '../components/HomeNav'\nexport default {\n    name: 'UserProfile',\n    components: {\n        HomeNav\n    },\n    data() {\n        return {\n            updateMessage: \"\",\n            userProfile: {\n                userID: localStorage.getItem(\"userID\"),\n                firstName: \"\",\n                lastName: \"\",\n                avatarUrl: \"\"\n            },\n            newProfile: {},\n        }\n    },\n    methods: {\n        setProfile() {\n            let url = `http://localhost:3000/api/user/${ this.userProfile.userID }`;\n            let options = {\n                method: \"GET\",\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"token\"),\n                }\n            };\n            fetch(url, options)\n                .then(response => response.json())\n                .then(data => {\n                    this.userProfile.firstName = data[0].firstName;\n                    this.userProfile.lastName = data[0].lastName;\n                    this.userProfile.avatarUrl = data[0].avatarUrl;\n                })\n                .catch(error => console.log(error))\n        },\n        updateAvatar(event) {\n            const formData = new FormData();\n            formData.append(\"image\", event.target.files[0]);\n            let url = `http://localhost:3000/api/user/${ this.userProfile.userID }`;\n            let options = {\n                method: \"POST\",\n                headers: { 'Authorization': 'Bearer ' + localStorage.getItem(\"token\") },\n                body: formData\n            };\n            fetch(url, options)\n                .then(res => res.json())\n                .then(data => {\n                    this.userProfile.avatarUrl = data;\n                })\n                .then(() => {\n                    this.updateMessage = \"Votre photo de profil a bien été mise à jour\";\n                })\n                .catch(error => console.log(error))\n        },\n        modifyProfile() {\n            let url = `http://localhost:3000/api/user/${ this.userProfile.userID }`;\n            let options = {\n                method: \"PUT\",\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"token\"),\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(this.newProfile),\n            };\n            fetch(url, options)\n                .then(res => res.json())\n                .then(data => {\n                    //récupérer le profil mis à jour\n                    this.userProfile = data[0];\n                    //réinitialiser les champs de formulaire\n                    this.newProfile = {}\n                })\n                .catch(error => console.log(error))\n        },\n        deleteProfile() {\n            let url = `http://localhost:3000/api/user/${ this.userProfile.userID }`;\n            let options = {\n                method: \"DELETE\",\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"token\"),\n                }\n            };\n            fetch(url, options)\n                .then(res => res.json())\n                .then(this.$router.push(\"/inscription\"))\n                .catch(error => console.log(error))\n        },\n    },\n    mounted() {\n        this.setProfile();\n    }\n}\n</script>\n\n<style lang=\"css\">\n  @import '../style/style.css'\n</style>"]}]}