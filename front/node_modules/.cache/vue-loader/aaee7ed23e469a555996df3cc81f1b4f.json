{"remainingRequest":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\src\\components\\NewComment.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\src\\components\\NewComment.vue","mtime":1609954819000},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1636700267689},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1636700306457},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\postcss-loader\\src\\index.js","mtime":1636700280736},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636700259092},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1636700288853}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgJy4uL3N0eWxlL3N0eWxlLmNzcycK"},{"version":3,"sources":["NewComment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA","file":"NewComment.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <form\n        v-on:submit.prevent=\"publish\"\n        :postID=\"postID\"\n        class=\"new-comment\">\n        <textarea\n            v-model=\"newComment.commentText\"\n            class=\"new-comment\"\n            placeholder=\"Votre commentaire bienveillant\"\n            rows=\"3\"\n            cols=\"10\"\n            required>\n        </textarea>\n        <button>Commenter cette publication</button>\n    </form>\n</template>\n\n<script>\nexport default {\n    name: \"NewComment\",\n    props : {\n        postID: {\n            type: Number\n        }\n    },\n    data: () => {\n        return {\n            newComment : {\n                commentText: \"\"\n            }\n        }\n    },\n    methods: {\n        publish() {\n            let url = `http://localhost:3000/api/comment/${ this.postID }/`\n            let options = {\n                method: \"POST\",\n                body: JSON.stringify(this.newComment),\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"token\"),\n                    'Content-Type': 'application/json'\n                }\n            }\n            fetch(url, options)\n                .then(res => res.json())\n                .then(() => {\n                    this.newComment.commentText = \"\";\n                    this.$emit(\"comment-published\");\n                })\n                .catch(error => {\n                    this.errorMessage = error\n                })\n        }\n    }\n}\n</script>\n\n<style lang=\"css\">\n@import '../style/style.css'\n</style>"]}]}