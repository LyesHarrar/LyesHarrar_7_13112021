{"remainingRequest":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\src\\components\\Post.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\src\\components\\Post.vue","mtime":1609954819000},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636700259092},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1636700283426},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636700259092},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1636700288853}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBDb21tZW50IGZyb20gJy4uL2NvbXBvbmVudHMvQ29tbWVudCcKaW1wb3J0IE5ld0NvbW1lbnQgZnJvbSAnLi4vY29tcG9uZW50cy9OZXdDb21tZW50JwpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAiUG9zdCIsCiAgICBwcm9wczogewogICAgICAgIHBvc3RJRDogewogICAgICAgICAgICB0eXBlOiBOdW1iZXIKICAgICAgICB9CiAgICB9LAogICAgY29tcG9uZW50czogewogICAgICAgIENvbW1lbnQsCiAgICAgICAgTmV3Q29tbWVudAogICAgfSwKICAgIGRhdGE6ICgpID0+IHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBwb3N0SW5mbzogewogICAgICAgICAgICAgICAgcG9zdElEOiAiIiwKICAgICAgICAgICAgICAgIHVzZXJJRDogIiIsCiAgICAgICAgICAgICAgICBkYXRlU2VuZDogIiIsCiAgICAgICAgICAgICAgICB0aXRsZTogIiIsCiAgICAgICAgICAgICAgICBnaWZVcmw6ICIiLAogICAgICAgICAgICAgICAgdGV4dDogIiIsCiAgICAgICAgICAgICAgICBjbGFwczogIiIsCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHVzZXJJbmZvIDogewogICAgICAgICAgICAgICAgYXZhdGFyVXJsIDogIiIsCiAgICAgICAgICAgICAgICBmaXJzdE5hbWU6ICIiLAogICAgICAgICAgICAgICAgbGFzdE5hbWU6ICIiLAogICAgICAgICAgICB9LAogICAgICAgICAgICB1cGRhdGVNZXNzYWdlOiAiIiwKICAgICAgICAgICAgdmlzaXRvcklEOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidXNlcklEIiksCiAgICAgICAgICAgIGNvbW1lbnRMaXN0OiBbXSwKICAgICAgICAgICAgaW52aXNpYmxlQ29tczogdHJ1ZSwKICAgICAgICAgICAgYWRtaW5SaWdodHM6IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJhZG1pblJpZ2h0cyIpCiAgICAgICAgfQogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgY29udmVydERhdGUoKSB7CiAgICAgICAgICAgIGxldCBkYXRlID0gdGhpcy5wb3N0SW5mby5kYXRlU2VuZC5zcGxpdCgvWy0gVCA6XS8pOwogICAgICAgICAgICBsZXQgY29udmVydERhdGUgPSBgJHtkYXRlWzJdfS8ke2RhdGVbMV19LyR7ZGF0ZVswXX1gOwogICAgICAgICAgICByZXR1cm4gY29udmVydERhdGU7CiAgICAgICAgfSwKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgZ2V0UG9zdEluZm8oKSB7CiAgICAgICAgICAgIGxldCB1cmwgPSBgaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9wb3N0LyR7IHRoaXMucG9zdElEIH1gOwogICAgICAgICAgICBsZXQgb3B0aW9ucyA9IHsKICAgICAgICAgICAgICAgIG1ldGhvZDogIkdFVCIsCiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiAnQmVhcmVyICcgKyBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidG9rZW4iKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfTsKICAgICAgICAgICAgZmV0Y2godXJsLCBvcHRpb25zKQogICAgICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKQogICAgICAgICAgICAgICAgLnRoZW4oKGRhdGEpID0+IHsKICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YVswXSkgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBvc3RJbmZvLnBvc3RJRCA9IGRhdGFbMF0ucG9zdElEOwogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBvc3RJbmZvLnRpdGxlID0gZGF0YVswXS5wb3N0VGl0bGU7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucG9zdEluZm8uZ2lmVXJsID0gZGF0YVswXS5naWZVcmw7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucG9zdEluZm8udGV4dCA9IGRhdGFbMF0ucG9zdFRleHQ7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucG9zdEluZm8uY2xhcHMgPSBkYXRhWzBdLmNsYXBzOwogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBvc3RJbmZvLmRhdGVTZW5kID0gZGF0YVswXS5kYXRlU2VuZDsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5wb3N0SW5mby51c2VySUQgPSBkYXRhWzBdLnVzZXJJRDsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXRVc2VySW5mbygpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy51cGRhdGVNZXNzYWdlID0gZGF0YS5tZXNzYWdlOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4gY29uc29sZS5sb2coZXJyb3IpKQogICAgICAgIH0sCiAgICAgICAgZ2V0VXNlckluZm8oKSB7CiAgICAgICAgICAgIGxldCB1cmwgPSBgaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS91c2VyLyR7IHRoaXMucG9zdEluZm8udXNlcklEIH1gOwogICAgICAgICAgICBsZXQgb3B0aW9ucyA9IHsKICAgICAgICAgICAgICAgIG1ldGhvZDogIkdFVCIsCiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiAnQmVhcmVyICcgKyBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidG9rZW4iKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfTsKICAgICAgICAgICAgZmV0Y2godXJsLCBvcHRpb25zKQogICAgICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKQogICAgICAgICAgICAgICAgLnRoZW4oZGF0YSA9PiB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy51c2VySW5mby5hdmF0YXJVcmwgPSBkYXRhWzBdLmF2YXRhclVybDsKICAgICAgICAgICAgICAgICAgICB0aGlzLnVzZXJJbmZvLmZpcnN0TmFtZSA9IGRhdGFbMF0uZmlyc3ROYW1lOwogICAgICAgICAgICAgICAgICAgIHRoaXMudXNlckluZm8ubGFzdE5hbWUgPSBkYXRhWzBdLmxhc3ROYW1lOwogICAgICAgICAgICAgICAgICAgIHRoaXMudXNlckluZm8uYWRtaW5SaWdodHMgPSBkYXRhWzBdLmFkbWluUmlnaHRzOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmxvZyhlcnJvcikpCiAgICAgICAgfSwKICAgICAgICBnZXRDb21tZW50TGlzdCgpIHsKICAgICAgICAgICAgbGV0IHVybCA9IGBodHRwOi8vbG9jYWxob3N0OjMwMDAvYXBpL2NvbW1lbnQvJHsgdGhpcy5wb3N0SUQgfWA7CiAgICAgICAgICAgIGxldCBvcHRpb25zID0gewogICAgICAgICAgICAgICAgbWV0aG9kOiAiR0VUIiwKICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6ICdCZWFyZXIgJyArIGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ0b2tlbiIpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9OwogICAgICAgICAgICBmZXRjaCh1cmwsIG9wdGlvbnMpCiAgICAgICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5qc29uKCkpCiAgICAgICAgICAgICAgICAudGhlbigoZGF0YSkgPT4gewogICAgICAgICAgICAgICAgICAgIHRoaXMuY29tbWVudExpc3QgPSBkYXRhOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgLmNhdGNoKGVycm9yID0+IGNvbnNvbGUubG9nKGVycm9yKSkKICAgICAgICB9LAogICAgICAgIGRlbGV0ZVBvc3QoKSB7CiAgICAgICAgICAgIGxldCB1cmwgPSBgaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9wb3N0LyR7IHRoaXMucG9zdElEIH1gOwogICAgICAgICAgICBsZXQgb3B0aW9ucyA9IHsKICAgICAgICAgICAgICAgIG1ldGhvZDogIkRFTEVURSIsCiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiAnQmVhcmVyICcgKyBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidG9rZW4iKSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfTsKICAgICAgICAgICAgZmV0Y2godXJsLCBvcHRpb25zKQogICAgICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKQogICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4gewogICAgICAgICAgICAgICAgICAgIHRoaXMuJGVtaXQoInBvc3QtZGVsZXRlZCIpOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmxvZyhlcnJvcikpCiAgICAgICAgfSwKICAgICAgICBjbGFwUG9zdCgpIHsKICAgICAgICAgICAgbGV0IHVybCA9IGBodHRwOi8vbG9jYWxob3N0OjMwMDAvYXBpL3Bvc3QvJHsgdGhpcy5wb3N0SUQgfWA7CiAgICAgICAgICAgIGxldCBvcHRpb25zID0gewogICAgICAgICAgICAgICAgbWV0aG9kOiAiUFVUIiwKICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6ICdCZWFyZXIgJyArIGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ0b2tlbiIpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9OwogICAgICAgICAgICBmZXRjaCh1cmwsIG9wdGlvbnMpCiAgICAgICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5qc29uKCkpCiAgICAgICAgICAgICAgICAudGhlbigoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXRQb3N0SW5mbygpOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmxvZyhlcnJvcikpCiAgICAgICAgfQogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgdGhpcy5nZXRQb3N0SW5mbygpOwogICAgICAgIHRoaXMuZ2V0Q29tbWVudExpc3QoKTsKICAgIH0KfQo="},{"version":3,"sources":["Post.vue"],"names":[],"mappingsfile":"Post.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <div class=\"post\" :postID=\"postID\">\n            <div class=\"post-info\">\n                <div class=\"post-info-sender\">\n                    <img\n                        class=\"post-info-sender-avatar\"\n                        :src=\"userInfo.avatarUrl\"\n                        alt=\"Avatar de l'utilisateur\"\n                    />\n                    <h3\n                        class=\"post-info-sender-name\">\n                        {{ userInfo.firstName }}\n                        {{ userInfo.lastName }}\n                    </h3>\n                </div>\n                <div class=\"post-info-time\">\n                    <h3>Posté le {{ convertDate }}</h3>\n                    <img\n                        v-if=\"postInfo.userID == visitorID || adminRights == 1\"\n                        @click=\"deletePost\"\n                        src=\"../assets/white-trash.png\"\n                        alt=\"Icône de suppression\"\n                    />\n                </div>\n            </div>\n\n            <div class=\"post-content\">\n                <p\n                    v-if=\"updateMessage.length >= 1\"\n                    class=\"alert-msg\">\n                    {{ updateMessage }}\n                </p>\n                <img\n                    class=\"post-content-gif\"\n                    :src=\"postInfo.gifUrl\"\n                    alt=\"Gif publié par l'utilisateur\"\n                />\n                <div class=\"post-content-text\">\n                    <div>\n                        <h2>{{ postInfo.title }}</h2>\n                        <p>{{ postInfo.text }}</p>\n                    </div>\n                    <div class=\"post-claps\">\n                        <img\n                            v-if=\"postInfo.claps >= 1\"\n                            @click=\"clapPost\"\n                            src=\"../assets/clap.png\"\n                            alt=\"Icône accompagnant le nombre d'applaudissements\"\n                        />\n                        <img\n                            v-else\n                            src=\"../assets/unclap.png\"\n                            @click=\"clapPost\"\n                            alt=\"Icône signifiant l'absence d'applaudissement\"\n                        />\n                        <p v-if=\"postInfo.claps >= 1\">{{ postInfo.claps }}</p>\n                    </div>\n                </div>\n            </div>\n            <button\n                v-if=\"!invisibleComs\"\n                @click=\"invisibleComs = true\"\n                class=\"toggle-button\"\n                aria-hidden=\"true\"\n                >Masquer les commentaires\n            </button>\n            <button\n                v-if=\"invisibleComs\"\n                @click=\"invisibleComs = false\"\n                class=\"toggle-button\"\n                aria-hidden=\"true\"\n                >Afficher les commentaires\n            </button>\n        </div>\n\n        <div class=\"comment-section\" v-show=\"!invisibleComs\">\n            <Comment\n                v-for=\"comment in commentList\"\n                v-bind:key=\"comment.commentID\"\n                :commentID=\"comment.commentID\"\n                :postID=\"comment.postID\"\n                @comment-deleted=\"getCommentList\"\n            />\n            <NewComment\n                :postID=\"this.postID\"\n                @comment-published=\"getCommentList\"\n            />\n        </div>\n    </div>\n</template>\n\n<script>\nimport Comment from '../components/Comment'\nimport NewComment from '../components/NewComment'\nexport default {\n    name: \"Post\",\n    props: {\n        postID: {\n            type: Number\n        }\n    },\n    components: {\n        Comment,\n        NewComment\n    },\n    data: () => {\n        return {\n            postInfo: {\n                postID: \"\",\n                userID: \"\",\n                dateSend: \"\",\n                title: \"\",\n                gifUrl: \"\",\n                text: \"\",\n                claps: \"\",\n            },\n            userInfo : {\n                avatarUrl : \"\",\n                firstName: \"\",\n                lastName: \"\",\n            },\n            updateMessage: \"\",\n            visitorID: localStorage.getItem(\"userID\"),\n            commentList: [],\n            invisibleComs: true,\n            adminRights: localStorage.getItem(\"adminRights\")\n        }\n    },\n    computed: {\n        convertDate() {\n            let date = this.postInfo.dateSend.split(/[- T :]/);\n            let convertDate = `${date[2]}/${date[1]}/${date[0]}`;\n            return convertDate;\n        },\n    },\n    methods: {\n        getPostInfo() {\n            let url = `http://localhost:3000/api/post/${ this.postID }`;\n            let options = {\n                method: \"GET\",\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"token\"),\n                }\n            };\n            fetch(url, options)\n                .then(response => response.json())\n                .then((data) => {\n                    if (data[0]) {\n                        this.postInfo.postID = data[0].postID;\n                        this.postInfo.title = data[0].postTitle;\n                        this.postInfo.gifUrl = data[0].gifUrl;\n                        this.postInfo.text = data[0].postText;\n                        this.postInfo.claps = data[0].claps;\n                        this.postInfo.dateSend = data[0].dateSend;\n                        this.postInfo.userID = data[0].userID;\n                        this.getUserInfo();\n                    }\n                    else {\n                        this.updateMessage = data.message;\n                    }\n                })\n                .catch(error => console.log(error))\n        },\n        getUserInfo() {\n            let url = `http://localhost:3000/api/user/${ this.postInfo.userID }`;\n            let options = {\n                method: \"GET\",\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"token\"),\n                }\n            };\n            fetch(url, options)\n                .then(response => response.json())\n                .then(data => {\n                    this.userInfo.avatarUrl = data[0].avatarUrl;\n                    this.userInfo.firstName = data[0].firstName;\n                    this.userInfo.lastName = data[0].lastName;\n                    this.userInfo.adminRights = data[0].adminRights;\n                })\n                .catch(error => console.log(error))\n        },\n        getCommentList() {\n            let url = `http://localhost:3000/api/comment/${ this.postID }`;\n            let options = {\n                method: \"GET\",\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"token\"),\n                }\n            };\n            fetch(url, options)\n                .then(response => response.json())\n                .then((data) => {\n                    this.commentList = data;\n                })\n            .catch(error => console.log(error))\n        },\n        deletePost() {\n            let url = `http://localhost:3000/api/post/${ this.postID }`;\n            let options = {\n                method: \"DELETE\",\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"token\"),\n                }\n            };\n            fetch(url, options)\n                .then(response => response.json())\n                .then(() => {\n                    this.$emit(\"post-deleted\");\n                })\n                .catch(error => console.log(error))\n        },\n        clapPost() {\n            let url = `http://localhost:3000/api/post/${ this.postID }`;\n            let options = {\n                method: \"PUT\",\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"token\"),\n                }\n            };\n            fetch(url, options)\n                .then(response => response.json())\n                .then(() => {\n                    this.getPostInfo();\n                })\n                .catch(error => console.log(error))\n        }\n    },\n    mounted() {\n        this.getPostInfo();\n        this.getCommentList();\n    }\n}\n</script>\n\n<style lang=\"css\">\n@import '../style/style.css'\n</style>"]}]}