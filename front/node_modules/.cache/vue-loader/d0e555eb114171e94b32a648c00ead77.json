{"remainingRequest":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\src\\components\\Comment.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\src\\components\\Comment.vue","mtime":1609954819000},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636700259092},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1636700283426},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1636700259092},{"path":"C:\\Users\\X240\\Desktop\\OpenClassrooms\\groupomania-lyes\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1636700288853}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJDb21tZW50IiwKICAgIHByb3BzOiB7CiAgICAgICAgY29tbWVudElEOiB7CiAgICAgICAgICAgIHR5cGU6IE51bWJlcgogICAgICAgIH0sCiAgICAgICAgcG9zdElEOiB7CiAgICAgICAgICAgIHR5cGU6IE51bWJlcgogICAgICAgIH0KICAgIH0sCiAgICBkYXRhOiAoKSA9PiB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgY29tbWVudEluZm86IHsKICAgICAgICAgICAgICAgIHVzZXJJRDogIiIsCiAgICAgICAgICAgICAgICBjb21tZW50VGV4dDogIiIsCiAgICAgICAgICAgICAgICBkYXRlU2VuZDogIiIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgdXNlckluZm86IHsKICAgICAgICAgICAgICAgIGZpcnN0TmFtZTogIiIsCiAgICAgICAgICAgICAgICBsYXN0TmFtZTogIiIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgdmlzaXRvcklEOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidXNlcklEIiksCiAgICAgICAgICAgIGFkbWluUmlnaHRzOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgiYWRtaW5SaWdodHMiKQogICAgICAgIH0KICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIGNvbnZlcnREYXRlKCkgewogICAgICAgICAgICBsZXQgZGF0ZSA9IHRoaXMuY29tbWVudEluZm8uZGF0ZVNlbmQuc3BsaXQoL1stIFQgOl0vKTsKICAgICAgICAgICAgbGV0IGNvbnZlcnREYXRlID0gYCR7ZGF0ZVsyXX0vJHtkYXRlWzFdfS8ke2RhdGVbMF19YDsKICAgICAgICAgICAgcmV0dXJuIGNvbnZlcnREYXRlOwogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgZ2V0Q29tbWVudEluZm8oKSB7CiAgICAgICAgICAgIGxldCB1cmwgPSBgaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9jb21tZW50LyR7IHRoaXMucG9zdElEIH0vJHsgdGhpcy5jb21tZW50SUR9YDsKICAgICAgICAgICAgbGV0IG9wdGlvbnMgPSB7CiAgICAgICAgICAgICAgICBtZXRob2Q6ICJHRVQiLAogICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICdBdXRob3JpemF0aW9uJzogJ0JlYXJlciAnICsgbG9jYWxTdG9yYWdlLmdldEl0ZW0oInRva2VuIiksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH07CiAgICAgICAgICAgIGZldGNoKHVybCwgb3B0aW9ucykKICAgICAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSkKICAgICAgICAgICAgICAgIC50aGVuKChkYXRhKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGFbMF0pIHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb21tZW50SW5mby51c2VySUQgPSBkYXRhWzBdLnVzZXJJRDsKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb21tZW50SW5mby5jb21tZW50VGV4dCA9IGRhdGFbMF0uY29tbWVudFRleHQ7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY29tbWVudEluZm8uZGF0ZVNlbmQgPSBkYXRhWzBdLmRhdGVTZW5kOwogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdldFVzZXJJbmZvKCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZU1lc3NhZ2UgPSBkYXRhLm1lc3NhZ2U7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmxvZyhlcnJvcikpCiAgICAgICAgfSwKICAgICAgICBnZXRVc2VySW5mbygpIHsKICAgICAgICAgICAgbGV0IHVybCA9IGBodHRwOi8vbG9jYWxob3N0OjMwMDAvYXBpL3VzZXIvJHsgdGhpcy5jb21tZW50SW5mby51c2VySUQgfWA7CiAgICAgICAgICAgIGxldCBvcHRpb25zID0gewogICAgICAgICAgICAgICAgbWV0aG9kOiAiR0VUIiwKICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6ICdCZWFyZXIgJyArIGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ0b2tlbiIpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9OwogICAgICAgICAgICBmZXRjaCh1cmwsIG9wdGlvbnMpCiAgICAgICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5qc29uKCkpCiAgICAgICAgICAgICAgICAudGhlbihkYXRhID0+IHsKICAgICAgICAgICAgICAgICAgICB0aGlzLnVzZXJJbmZvLmZpcnN0TmFtZSA9IGRhdGFbMF0uZmlyc3ROYW1lOwogICAgICAgICAgICAgICAgICAgIHRoaXMudXNlckluZm8ubGFzdE5hbWUgPSBkYXRhWzBdLmxhc3ROYW1lOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC5jYXRjaChlcnJvciA9PiBjb25zb2xlLmxvZyhlcnJvcikpCiAgICAgICAgfSwKICAgICAgICBkZWxldGVDb21tZW50KCkgewogICAgICAgICAgICBsZXQgdXJsID0gYGh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9hcGkvY29tbWVudC8keyB0aGlzLnBvc3RJRCB9LyR7IHRoaXMuY29tbWVudElEfWA7CiAgICAgICAgICAgIGxldCBvcHRpb25zID0gewogICAgICAgICAgICAgICAgbWV0aG9kOiAiREVMRVRFIiwKICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6ICdCZWFyZXIgJyArIGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ0b2tlbiIpLAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9OwogICAgICAgICAgICBmZXRjaCh1cmwsIG9wdGlvbnMpCiAgICAgICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5qc29uKCkpCiAgICAgICAgICAgICAgICAudGhlbigoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgiY29tbWVudC1kZWxldGVkIik7CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgLmNhdGNoKGVycm9yID0+IGNvbnNvbGUubG9nKGVycm9yKSkKICAgICAgICB9LAogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgdGhpcy5nZXRDb21tZW50SW5mbygpOwogICAgfQp9Cg=="},{"version":3,"sources":["Comment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Comment.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"comment\" :commentID=\"commentID\" :postID=\"postID\">\n        <p class=\"comment-info\">Le {{ convertDate }}, {{ userInfo.firstName }} {{ userInfo.lastName }} a répondu :\n            <img\n                v-if=\"commentInfo.userID == visitorID || adminRights == 1\"\n                @click=\"deleteComment\"\n                src=\"../assets/trash.png\"\n                alt=\"Icône de suppression\"\n            />\n        </p>\n        <p class=\"comment-content\">\" {{ commentInfo.commentText }} \"</p>\n    </div>\n</template>        \n\n<script>\nexport default {\n    name: \"Comment\",\n    props: {\n        commentID: {\n            type: Number\n        },\n        postID: {\n            type: Number\n        }\n    },\n    data: () => {\n        return {\n            commentInfo: {\n                userID: \"\",\n                commentText: \"\",\n                dateSend: \"\"\n            },\n            userInfo: {\n                firstName: \"\",\n                lastName: \"\"\n            },\n            visitorID: localStorage.getItem(\"userID\"),\n            adminRights: localStorage.getItem(\"adminRights\")\n        }\n    },\n    computed: {\n        convertDate() {\n            let date = this.commentInfo.dateSend.split(/[- T :]/);\n            let convertDate = `${date[2]}/${date[1]}/${date[0]}`;\n            return convertDate;\n        }\n    },\n    methods: {\n        getCommentInfo() {\n            let url = `http://localhost:3000/api/comment/${ this.postID }/${ this.commentID}`;\n            let options = {\n                method: \"GET\",\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"token\"),\n                }\n            };\n            fetch(url, options)\n                .then(response => response.json())\n                .then((data) => {\n                    if (data[0]) {\n                        this.commentInfo.userID = data[0].userID;\n                        this.commentInfo.commentText = data[0].commentText;\n                        this.commentInfo.dateSend = data[0].dateSend;\n                        this.getUserInfo();\n                    }\n                    else {\n                        this.updateMessage = data.message;\n                    }\n                })\n                .catch(error => console.log(error))\n        },\n        getUserInfo() {\n            let url = `http://localhost:3000/api/user/${ this.commentInfo.userID }`;\n            let options = {\n                method: \"GET\",\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"token\"),\n                }\n            };\n            fetch(url, options)\n                .then(response => response.json())\n                .then(data => {\n                    this.userInfo.firstName = data[0].firstName;\n                    this.userInfo.lastName = data[0].lastName;\n                })\n                .catch(error => console.log(error))\n        },\n        deleteComment() {\n            let url = `http://localhost:3000/api/comment/${ this.postID }/${ this.commentID}`;\n            let options = {\n                method: \"DELETE\",\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem(\"token\"),\n                }\n            };\n            fetch(url, options)\n                .then(response => response.json())\n                .then(() => {\n                    this.$emit(\"comment-deleted\");\n                })\n                .catch(error => console.log(error))\n        },\n    },\n    mounted() {\n        this.getCommentInfo();\n    }\n}\n</script>\n\n<style lang=\"css\">\n@import '../style/style.css';\n</style>"]}]}